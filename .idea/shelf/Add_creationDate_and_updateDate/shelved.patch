Index: src/main/java/io/seidel/musscraft/database/repositories/.gitkeep
===================================================================
--- src/main/java/io/seidel/musscraft/database/repositories/.gitkeep	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
+++ src/main/java/io/seidel/musscraft/database/repositories/.gitkeep	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
@@ -1,0 +0,0 @@
Index: src/main/java/io/seidel/musscraft/services/api/.gitkeep
===================================================================
--- src/main/java/io/seidel/musscraft/services/api/.gitkeep	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
+++ src/main/java/io/seidel/musscraft/services/api/.gitkeep	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
@@ -1,0 +0,0 @@
Index: src/main/java/io/seidel/musscraft/services/exceptions/.gitkeep
===================================================================
--- src/main/java/io/seidel/musscraft/services/exceptions/.gitkeep	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
+++ src/main/java/io/seidel/musscraft/services/exceptions/.gitkeep	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
@@ -1,0 +0,0 @@
Index: src/main/java/io/seidel/musscraft/services/impl/.gitkeep
===================================================================
--- src/main/java/io/seidel/musscraft/services/impl/.gitkeep	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
+++ src/main/java/io/seidel/musscraft/services/impl/.gitkeep	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
@@ -1,0 +0,0 @@
Index: src/main/java/io/seidel/musscraft/database/models/AbstractBaseEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.seidel.musscraft.database.models;\r\n\r\nimport javax.persistence.Id;\r\nimport javax.persistence.MappedSuperclass;\r\nimport java.io.Serializable;\r\nimport java.util.UUID;\r\n\r\n@MappedSuperclass\r\npublic abstract class AbstractBaseEntity implements Serializable {\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    @Id\r\n    private String uuid;\r\n\r\n    public AbstractBaseEntity() {\r\n        this.uuid = UUID.randomUUID().toString();\r\n    }\r\n\r\n    public String getUuid() {\r\n        return uuid;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return uuid.hashCode();\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (this == obj)\r\n            return true;\r\n\r\n        if (obj == null)\r\n            return false;\r\n\r\n        if (!(obj instanceof AbstractBaseEntity)) {\r\n            return false;\r\n        }\r\n\r\n        AbstractBaseEntity other = (AbstractBaseEntity) obj;\r\n        return getUuid().equals(other.getUuid());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/seidel/musscraft/database/models/AbstractBaseEntity.java	(revision 80a26c1ad44c0038f8ca456ccf71d8fae57f81eb)
+++ src/main/java/io/seidel/musscraft/database/models/AbstractBaseEntity.java	(date 1573321824983)
@@ -3,6 +3,7 @@
 import javax.persistence.Id;
 import javax.persistence.MappedSuperclass;
 import java.io.Serializable;
+import java.util.Date;
 import java.util.UUID;
 
 @MappedSuperclass
@@ -12,14 +13,27 @@
     @Id
     private String uuid;
 
+    private Date creationDate;
+
+    private Date updateDate;
+
     public AbstractBaseEntity() {
         this.uuid = UUID.randomUUID().toString();
+        this.creationDate = new Date();
     }
 
     public String getUuid() {
         return uuid;
     }
 
+    public Date getCreationDate() {
+        return creationDate;
+    }
+
+    public Date getUpdateDate() {
+        return updateDate;
+    }
+
     @Override
     public int hashCode() {
         return uuid.hashCode();
Index: src/main/java/io/seidel/musscraft/database/models/Home.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/seidel/musscraft/database/models/Home.java	(date 1573262190161)
+++ src/main/java/io/seidel/musscraft/database/models/Home.java	(date 1573262190161)
@@ -0,0 +1,64 @@
+package io.seidel.musscraft.database.models;
+
+import com.dieselpoint.norm.serialize.DbSerializer;
+import io.seidel.musscraft.database.serializers.LocationSerializer;
+import org.bukkit.Location;
+
+import javax.persistence.Entity;
+import javax.persistence.Table;
+
+@Entity
+@Table(name = "Home")
+public class Home extends AbstractBaseEntity {
+
+    private String name;
+
+    private MussPlayer player;
+
+    private boolean isRemoved;
+
+    private boolean isPublic;
+
+    @DbSerializer(LocationSerializer.class)
+    private Location location;
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public MussPlayer getPlayer() {
+        return player;
+    }
+
+    public void setPlayer(MussPlayer player) {
+        this.player = player;
+    }
+
+    public boolean isRemoved() {
+        return isRemoved;
+    }
+
+    public void setRemoved(boolean removed) {
+        this.isRemoved = removed;
+    }
+
+    public boolean isPublic() {
+        return isPublic;
+    }
+
+    public void setPublic(boolean aPublic) {
+        isPublic = aPublic;
+    }
+
+    public Location getLocation() {
+        return location;
+    }
+
+    public void setLocation(Location location) {
+        this.location = location;
+    }
+}
Index: src/main/java/io/seidel/musscraft/database/repositories/HomeRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/seidel/musscraft/database/repositories/HomeRepository.java	(date 1573262074623)
+++ src/main/java/io/seidel/musscraft/database/repositories/HomeRepository.java	(date 1573262074623)
@@ -0,0 +1,4 @@
+package io.seidel.musscraft.database.repositories;
+
+public class HomeRepository {
+}
Index: src/main/java/io/seidel/musscraft/services/vo/HomeCreateVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/seidel/musscraft/services/vo/HomeCreateVO.java	(date 1573261853055)
+++ src/main/java/io/seidel/musscraft/services/vo/HomeCreateVO.java	(date 1573261853055)
@@ -0,0 +1,26 @@
+package io.seidel.musscraft.services.vo;
+
+import org.bukkit.Location;
+
+public class HomeCreateVO {
+
+    private String name;
+
+    private Location location;
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public Location getLocation() {
+        return location;
+    }
+
+    public void setLocation(Location location) {
+        this.location = location;
+    }
+}
Index: src/main/java/io/seidel/musscraft/services/vo/HomeSearchVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/seidel/musscraft/services/vo/HomeSearchVO.java	(date 1573262059019)
+++ src/main/java/io/seidel/musscraft/services/vo/HomeSearchVO.java	(date 1573262059019)
@@ -0,0 +1,34 @@
+package io.seidel.musscraft.services.vo;
+
+public class HomeSearchVO {
+    
+    private String name;
+
+    private String ownerName;
+
+    private Boolean isPublic;
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getOwnerName() {
+        return ownerName;
+    }
+
+    public void setOwnerName(String ownerName) {
+        this.ownerName = ownerName;
+    }
+
+    public Boolean getPublic() {
+        return isPublic;
+    }
+
+    public void setPublic(Boolean aPublic) {
+        isPublic = aPublic;
+    }
+}
Index: src/main/java/io/seidel/musscraft/services/api/HomeService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/seidel/musscraft/services/api/HomeService.java	(date 1573261969520)
+++ src/main/java/io/seidel/musscraft/services/api/HomeService.java	(date 1573261969520)
@@ -0,0 +1,16 @@
+package io.seidel.musscraft.services.api;
+
+import io.seidel.musscraft.database.models.Home;
+import io.seidel.musscraft.services.exceptions.HomeNotFoundException;
+import io.seidel.musscraft.services.vo.HomeCreateVO;
+import io.seidel.musscraft.services.vo.HomeSearchVO;
+
+import java.util.Collection;
+
+public interface HomeService {
+    void create(HomeCreateVO create);
+
+    Home find(HomeSearchVO search) throws HomeNotFoundException;
+
+    Collection<Home> find(HomeSearchVO search, boolean hasNext);
+}
Index: src/main/java/io/seidel/musscraft/services/impl/HomeServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/seidel/musscraft/services/impl/HomeServiceImpl.java	(date 1573261969532)
+++ src/main/java/io/seidel/musscraft/services/impl/HomeServiceImpl.java	(date 1573261969532)
@@ -0,0 +1,27 @@
+package io.seidel.musscraft.services.impl;
+
+import io.seidel.musscraft.database.models.Home;
+import io.seidel.musscraft.services.api.HomeService;
+import io.seidel.musscraft.services.exceptions.HomeNotFoundException;
+import io.seidel.musscraft.services.vo.HomeCreateVO;
+import io.seidel.musscraft.services.vo.HomeSearchVO;
+
+import java.util.Collection;
+
+public class HomeServiceImpl implements HomeService {
+
+    @Override
+    public void create(HomeCreateVO create) {
+
+    }
+
+    @Override
+    public Home find(HomeSearchVO search) throws HomeNotFoundException {
+        return null;
+    }
+
+    @Override
+    public Collection<Home> find(HomeSearchVO search, boolean hasNext) {
+        return null;
+    }
+}
Index: src/main/java/io/seidel/musscraft/services/exceptions/HomeNotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/seidel/musscraft/services/exceptions/HomeNotFoundException.java	(date 1573261579365)
+++ src/main/java/io/seidel/musscraft/services/exceptions/HomeNotFoundException.java	(date 1573261579365)
@@ -0,0 +1,8 @@
+package io.seidel.musscraft.services.exceptions;
+
+public class HomeNotFoundException extends Exception {
+    @Override
+    public String getMessage() {
+        return "Casa não encontrada!";
+    }
+}
